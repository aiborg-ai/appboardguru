/* Completely hide all Next.js error overlays and development indicators */
nextjs-portal,
[data-nextjs-dialog-overlay],
[data-nextjs-dialog],
[data-nextjs-dialog-content],
[data-nextjs-toast],
[data-nextjs-error-overlay],
[data-nextjs-compile-error],
[data-nextjs-runtime-error],
.__next-error-overlay,
.__next-build-watcher,
.__next-dev-error-overlay,
[id*="nextjs"],
[class*="nextjs"],
[class*="__next"],
[data-nextjs*=""],
div[style*="position: fixed"][style*="z-index"],
div[style*="position: fixed"][style*="inset: 0"],
div[style*="position: absolute"][style*="z-index: 9000"] {
  display: none !important;
  visibility: hidden !important;
  opacity: 0 !important;
  pointer-events: none !important;
  position: absolute !important;
  left: -9999px !important;
  top: -9999px !important;
  width: 0 !important;
  height: 0 !important;
  overflow: hidden !important;
}

/* Hide any error boundary overlays and modals */
[role="dialog"][aria-modal="true"],
[role="alertdialog"],
[data-overlay-container],
[data-radix-portal],
div[data-state="open"][role="dialog"] {
  display: none !important;
}

/* Hide React error overlays with specific styling patterns */
div[style*="position: fixed"][style*="top: 0"][style*="left: 0"][style*="width: 100%"][style*="height: 100%"],
div[style*="position: fixed"][style*="inset: 0px"][style*="z-index"],
div[style*="background-color: rgba(0, 0, 0, 0.8)"],
div[style*="backdrop-filter: blur"] {
  display: none !important;
}

/* Hide webpack compilation indicators */
[class*="webpack"],
[id*="webpack"],
[data-webpack*=""] {
  display: none !important;
}

/* Hide any development mode indicators - commented out invalid selectors */
/*
div:has-text("Error"),
div:has-text("Warning"),
div:has-text("Failed to compile"),
div:has-text("Compiling") {
  display: none !important;
}
*/

/* Global rule to hide any element containing error text in development - commented out invalid selectors */
/*
*:not(code):not(pre):not(script) {
  &:has-text("Unhandled Runtime Error"),
  &:has-text("Error occurred"),
  &:has-text("React will try to recreate"),
  &:has-text("Warning:") {
    display: none !important;
  }
}
*/