/**
 * Shared Database Types for Mobile
 * Subset of main database types needed for mobile operations
 */

// Core database row types used in mobile app
export interface User {\n  id: string;\n  email: string;\n  full_name: string;\n  avatar_url?: string;\n  role: 'admin' | 'member' | 'viewer';\n  status: 'active' | 'inactive' | 'pending';\n  last_seen?: string;\n  created_at: string;\n  updated_at: string;\n}\n\nexport interface Organization {\n  id: string;\n  name: string;\n  slug: string;\n  description?: string;\n  logo_url?: string;\n  website?: string;\n  industry?: string;\n  size?: string;\n  status: 'active' | 'inactive' | 'archived';\n  created_at: string;\n  updated_at: string;\n}\n\nexport interface Asset {\n  id: string;\n  vault_id: string;\n  organization_id: string;\n  name: string;\n  description?: string;\n  file_path: string;\n  file_size: number;\n  file_type: string;\n  mime_type: string;\n  status: 'uploading' | 'processing' | 'ready' | 'error';\n  is_confidential: boolean;\n  created_by: string;\n  created_at: string;\n  updated_at: string;\n}\n\nexport interface Vault {\n  id: string;\n  organization_id: string;\n  name: string;\n  description?: string;\n  color?: string;\n  is_archived: boolean;\n  created_by: string;\n  created_at: string;\n  updated_at: string;\n}\n\nexport interface Meeting {\n  id: string;\n  organization_id: string;\n  title: string;\n  description?: string;\n  scheduled_at: string;\n  duration_minutes?: number;\n  location?: string;\n  meeting_type: 'board' | 'committee' | 'annual' | 'special';\n  status: 'scheduled' | 'in_progress' | 'completed' | 'cancelled';\n  agenda?: any;\n  created_by: string;\n  created_at: string;\n  updated_at: string;\n}\n\nexport interface Notification {\n  id: string;\n  user_id: string;\n  organization_id?: string;\n  title: string;\n  message: string;\n  type: string;\n  priority: 'low' | 'normal' | 'high' | 'urgent';\n  read: boolean;\n  action_url?: string;\n  created_at: string;\n}\n\nexport interface Annotation {\n  id: string;\n  asset_id: string;\n  user_id: string;\n  page_number: number;\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  content: string;\n  type: 'highlight' | 'note' | 'drawing';\n  color?: string;\n  is_private: boolean;\n  created_at: string;\n  updated_at: string;\n}\n\nexport interface Comment {\n  id: string;\n  asset_id: string;\n  user_id: string;\n  parent_id?: string;\n  content: string;\n  is_private: boolean;\n  mentions?: string[];\n  created_at: string;\n  updated_at: string;\n}\n\nexport interface MeetingVote {\n  id: string;\n  meeting_id: string;\n  user_id: string;\n  resolution_id: string;\n  vote: 'for' | 'against' | 'abstain';\n  reason?: string;\n  cast_at: string;\n}\n\n// Database views for mobile optimization\nexport interface AssetWithVault extends Asset {\n  vault: Pick<Vault, 'id' | 'name' | 'color'>;\n}\n\nexport interface MeetingWithVotes extends Meeting {\n  total_votes: number;\n  user_vote?: 'for' | 'against' | 'abstain';\n  voting_deadline?: string;\n}\n\nexport interface NotificationWithCount extends Notification {\n  unread_count: number;\n}\n\n// Mobile-specific table types\nexport interface OfflineActionRecord {\n  id: string;\n  type: string;\n  data: any;\n  timestamp: number;\n  retry_count: number;\n  priority: 'critical' | 'high' | 'normal' | 'low';\n  status: 'pending' | 'processing' | 'completed' | 'failed';\n  error?: string;\n}\n\nexport interface CacheEntry {\n  key: string;\n  data: any;\n  ttl: number;\n  created_at: number;\n  last_accessed: number;\n  priority: 'critical' | 'high' | 'normal' | 'low';\n  encrypted: boolean;\n}\n\nexport interface SyncLog {\n  id: string;\n  table_name: string;\n  operation: 'create' | 'update' | 'delete';\n  record_id: string;\n  synced_at: string;\n  conflicts?: any;\n  resolved: boolean;\n}\n\n// Type guards for runtime type checking\nexport function isUser(obj: unknown): obj is User {\n  return typeof obj === 'object' && obj !== null && 'id' in obj && 'email' in obj;\n}\n\nexport function isOrganization(obj: unknown): obj is Organization {\n  return typeof obj === 'object' && obj !== null && 'id' in obj && 'name' in obj && 'slug' in obj;\n}\n\nexport function isAsset(obj: unknown): obj is Asset {\n  return typeof obj === 'object' && obj !== null && 'id' in obj && 'vault_id' in obj && 'file_path' in obj;\n}\n\nexport function isMeeting(obj: unknown): obj is Meeting {\n  return typeof obj === 'object' && obj !== null && 'id' in obj && 'title' in obj && 'scheduled_at' in obj;\n}\n\n// Export types for use in mobile app\nexport type MobileTableName = \n  | 'users'\n  | 'organizations'\n  | 'assets'\n  | 'vaults'\n  | 'meetings'\n  | 'notifications'\n  | 'annotations'\n  | 'comments'\n  | 'meeting_votes'\n  | 'offline_actions'\n  | 'cache_entries'\n  | 'sync_logs';\n\nexport type MobileRecord = \n  | User\n  | Organization\n  | Asset\n  | Vault\n  | Meeting\n  | Notification\n  | Annotation\n  | Comment\n  | MeetingVote\n  | OfflineActionRecord\n  | CacheEntry\n  | SyncLog;\n"}